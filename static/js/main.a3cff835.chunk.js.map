{"version":3,"sources":["components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/Footer.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","apiInstance","options","this","_baseUrl","baseUrl","_baseHeaders","headers","fetch","method","then","res","ok","json","Promise","reject","status","statusText","name","about","body","JSON","stringify","avatar","link","cardId","type","authorization","Card","props","card","onClick","onPictureClick","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","apiInsance","getUserInfo","catch","err","console","log","getInitialCards","aria-label","onEditAvatar","onEditProfile","onAddPlace","map","i","key","onCardPictureClick","PopupWithForm","popupClass","isOpened","buttonClass","title","action","encType","noValidate","children","disabled","buttonDisabled","buttonText","onClose","ImagePopup","Footer","App","isEditProfilePopupOpen","setEditProfileClick","isAddPlacePopupOpen","setAddPlaceClick","isEditAvatarPopupOpen","setEditAvatarClick","selectedCard","setSelectedCard","isPicturePopupOpen","setPicturePopupOpened","closeAllPopups","id","placeholder","minLength","maxLength","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.a3cff835.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={logo} alt=\"Проект Место\" />\n    </header>\n  );\n}\n\nexport default Header;\n","class Api{\n  constructor(options){\n    this._baseUrl = options.baseUrl;\n    this._baseHeaders = options.headers;\n  }\n\n  getUserInfo() {\n    return fetch(\n      `${this._baseUrl}/users/me`,\n      {\n        method: 'GET',\n        headers: this._baseHeaders\n      }\n    ).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка при получении информации о пользователе: ${res.status} ${res.statusText}`);\n    });\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`,\n      {\n        method: 'GET',\n        headers: this._baseHeaders\n      }\n    )\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка при получении карточек: ${res.status} ${res.statusText}`);\n    });\n  }\n\n  updateUserProfile({name, about}) {\n    return fetch(\n      `${this._baseUrl}/users/me`,\n      {\n        method: 'PATCH',\n        headers: this._baseHeaders,\n        body: JSON.stringify({\n          name,\n          about\n        })\n      }\n    )\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка обновления профиля пользователя: ${res.status} ${res.statusText}`);\n      }\n    );\n  }\n\n  updateUserAvatar(avatar) {\n    return fetch(\n      `${this._baseUrl}/users/me/avatar`,\n      {\n        method: 'PATCH',\n        headers: this._baseHeaders,\n        body: JSON.stringify({\n          avatar\n        })\n      }\n    )\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка обновления аватара пользователя: ${res.status} ${res.statusText}`);\n      }\n    );\n  }\n\n  addNewCard({name, link}){\n    return fetch(\n      `${this._baseUrl}/cards`,\n      {\n        method: 'POST',\n        headers: this._baseHeaders,\n        body: JSON.stringify({\n          name,\n          link\n        })\n      }\n    )\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка добавления новой карточки: ${res.status} ${res.statusText}`);\n      }\n    );\n  }\n\n  removeCard(cardId){\n    return fetch(\n      `${this._baseUrl}/cards/${cardId}`,\n      {\n        method: 'DELETE',\n        headers: this._baseHeaders\n      }\n    )\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка удаления карточки: ${res.status} ${res.statusText}`);\n      }\n    );\n  }\n\n  likeAction(cardId, type){\n    return fetch(\n      `${this._baseUrl}/cards/likes/${cardId}`,\n      {\n        method: type,\n        headers: this._baseHeaders\n      }\n    )\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка при постановке лайка: ${res.status} ${res.statusText}`);\n      }\n    );\n  }\n}\n\nconst apiInstance = new Api(\n  {\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n      authorization: '01de46de-ea96-4368-9287-db88b2ef4480',\n      'Content-Type': 'application/json'\n    }\n  }\n);\n\nexport default apiInstance;\n","import React from 'react';\n\nfunction Card(props) {\n\n  function handleClick() {\n    props.onPictureClick(props.card);\n  }\n\n  return (\n    <article className=\"places__place\">\n      <figure className=\"places__picture-wrap\">\n        <img src={props.card.link} alt={props.card.name} className=\"places__picture\" onClick={handleClick}/>\n      </figure>\n      <div className=\"places__title-wrap\">\n        <h2 className=\"places__title\">{props.card.name}</h2>\n        <div className=\"places__like\">\n          <button type=\"button\" className=\"places__like-btn\"></button>\n          <p className=\"places__like-counter\">{props.card.likes.length}</p>\n        </div>\n      </div>\n      <button type=\"button\" className=\"places__remove\"></button>\n    </article>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport apiInsance from '../utils/Api.js';\nimport Card from './Card.js';\n\nfunction Main(props) {\n\n  const [userName, setUserName] = React.useState('Chuck Testa');\n  const [userDescription, setUserDescription] = React.useState('American taxidermist');\n  const [userAvatar, setUserAvatar] = React.useState('https://i.imgflip.com/1kpg18.jpg');\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    apiInsance.getUserInfo().then((res) => {\n      setUserName(res.name);\n      setUserDescription(res.about);\n      setUserAvatar(res.avatar);\n    }).catch((err) => {\n      console.log(err);\n    });\n\n    apiInsance.getInitialCards().then((res) => {\n      setCards(res);\n    }).catch((err) => {\n      console.log(err);\n    });\n  }, []);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <figure className=\"profile__avatar-wrap\">\n          <img className=\"profile__avatar\" src={userAvatar} alt=\"Аватар профиля\" />\n          <button className=\"profile__avatar-btn\" aria-label=\"Редактировать аватар\" onClick={props.onEditAvatar}></button>\n        </figure>\n        <div className=\"profile__info\">\n          <div className=\"profile__name-wrap\">\n            <h1 className=\"profile__name\">{userName}</h1>\n            <button type=\"button\" className=\"profile__edit-button\" aria-label=\"Редактировать профиль\" onClick={props.onEditProfile}></button>\n          </div>\n          <p className=\"profile__profession\">{userDescription}</p>\n        </div>\n        <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}>+</button>\n      </section>\n      <section className=\"places\">\n          {cards.map((card, i) => (\n            <Card key={i} card={card} onPictureClick={props.onCardPictureClick}/>\n          ))}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n\n  const popupClass = `popup popup_type_${props.name}${props.isOpened ? ' popup_state_opened' : ''}`;\n  const buttonClass = `input__btn ${!!props.buttonClass ? props.buttonClass : ''}`;\n\n  /**Насчёт кнопки - помимо текста кнопки, отличаются начальное состояние и есть доп классы у разных попапов:)\n   * Поэтому, мне всё-таки кажется, что удобнее было бы всё-таки оставить кнопку в children\n   * */\n  return (\n    <section className={popupClass}>\n      <div className=\"popup__container\">\n        <h3 className=\"popup__title\">{props.title}</h3>\n        <form className={`input input_type_${props.name}`} action=\"#\" name={props.name} encType=\"multipart/form-data\" method=\"POST\" noValidate>\n          {props.children}\n          <button type=\"submit\" className={buttonClass} disabled={props.buttonDisabled}>{props.buttonText}</button>\n        </form>\n        <button type=\"button\" className=\"popup__close-btn\" onClick={props.onClose}></button>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup(props) {\n\n  return (\n    <section className={`popup popup_type_picture ${props.isOpened ? ' popup_state_opened' : ''}`}>\n      <div className=\"popup__picture-container\">\n        <img src={props.card.link} className=\"popup__picture\" alt={props.card.name} />\n        <p className=\"popup__picture-title\">{props.card.name}</p>\n        <button type=\"button\" className=\"popup__close-btn\" onClick={props.onClose}></button>\n      </div>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport Footer from './Footer.js';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setEditProfileClick] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlaceClick] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarClick] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState([]);\n  const [isPicturePopupOpen, setPicturePopupOpened] = React.useState(false);\n\n  function closeAllPopups() {\n    setEditProfileClick(false);\n    setAddPlaceClick(false);\n    setEditAvatarClick(false);\n    setPicturePopupOpened(false);\n    setSelectedCard([]);\n  }\n\n  function handlePictureClick(card){\n    setSelectedCard(card);\n    setPicturePopupOpened(true);\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main onEditProfile={() => { setEditProfileClick(true) }} onAddPlace={() => { setAddPlaceClick(true) }} onEditAvatar={() => { setEditAvatarClick(true) }} onCardPictureClick={handlePictureClick} />\n      <Footer />\n      <PopupWithForm title=\"Редактировать профиль\" name=\"profile\" buttonText=\"Сохранить\" buttonDisabled={false} buttonClass=\"\" isOpened={isEditProfilePopupOpen} onClose={closeAllPopups} >\n        <label className=\"input__label\">\n          <input id=\"name-input\" type=\"text\" className=\"input__text input__text_type_name\" placeholder=\"Имя\" name=\"name\" minLength=\"2\" maxLength=\"40\" required />\n          <span id=\"name-input-error\" className=\"input__field-error\"></span>\n        </label>\n        <label className=\"input__label\">\n          <input id=\"profession-input\" type=\"text\" className=\"input__text input__text_type_profession\" placeholder=\"Профессия\" name=\"profession\" minLength=\"2\" maxLength=\"200\" required />\n          <span id=\"profession-input-error\" className=\"input__field-error\"></span>\n        </label>\n      </PopupWithForm>\n      <PopupWithForm title=\"Новое место\" name=\"place\" buttonText=\"Создать\" buttonDisabled={true} buttonClass=\"input__btn_state_disabled\" isOpened={isAddPlacePopupOpen} onClose={closeAllPopups}>\n        <label className=\"input__label\">\n          <input id=\"place-input\" type=\"text\" className=\"input__text input__text_type_place-title\" placeholder=\"Название\" name=\"place-title\" minLength=\"1\" maxLength=\"30\" required />\n          <span id=\"place-input-error\" className=\"input__field-error\"></span>\n        </label>\n        <label className=\"input__label\">\n          <input id=\"place-img-input\" type=\"url\" className=\"input__text input__text_type_place-img\" placeholder=\"Ссылка на картинку\" name=\"place-img\" required />\n          <span id=\"place-img-input-error\" className=\"input__field-error\"></span>\n        </label>\n      </PopupWithForm>\n      <PopupWithForm title=\"Вы уверены?\" name=\"confirm\" buttonText=\"Да\" buttonDisabled={false} buttonClass=\"input__btn_type_alone\" onClose={closeAllPopups} />\n      <PopupWithForm title=\"Обновить аватар\" name=\"avatar\" buttonText=\"Сохранить\" buttonDisabled={false} buttonClass=\"\" isOpened={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n        <label className=\"input__label\">\n          <input id=\"avatar-input\" type=\"url\" className=\"input__text input__text_type_avatar\" placeholder=\"Ссылка на картинку\" name=\"avatar\" required />\n          <span id=\"avatar-input-error\" className=\"input__field-error\"></span>\n        </label>\n      </PopupWithForm>\n      <ImagePopup card={selectedCard} isOpened={isPicturePopupOpen} onClose={closeAllPopups}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}